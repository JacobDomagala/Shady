name: Windows

on:
  push:
    branches:
      - master
      - develop
  pull_request:

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Download and install Vulkan SDK
      run: |
        Invoke-WebRequest -Uri https://sdk.lunarg.com/sdk/download/1.3.204.1/windows/VulkanSDK-1.3.204.1-Installer.exe -OutFile VulkanSDK-1.3.204.1-Installer.exe
        Start-Process -FilePath .\VulkanSDK-1.3.204.1-Installer.exe -ArgumentList /S -Wait

    - name: Set up environment variables
      run: |
        [Environment]::SetEnvironmentVariable("VULKAN_SDK", $env:VULKAN_SDK, [EnvironmentVariableTarget]::Machine)
        [Environment]::SetEnvironmentVariable("PATH", $env:VULKAN_SDK + "\Bin", [EnvironmentVariableTarget]::Process)

    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main

    - name: Create Build Environment
      run: |
        cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        conan install $GITHUB_WORKSPACE --output-folder=build --build=missing --settings=build_type=Release

        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE\
        -DASSIMP_BUILD_TESTS=0 -DASSIMP_BUILD_ASSIMP_TOOLS=0 -DBUILD_SHARED_LIBS=0

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: |
        cmake --build . --config $BUILD_TYPE > output.txt
        cat output.txt

    - name: Post PR comment for warnings/errors
      if: always() && github.ref != 'refs/heads/develop' && github.ref != 'refs/heads/master'
      uses: JacobDomagala/CompileResultAction@master
      with:
        comment_title: WINDOWS COMPILE RESULT
        compile_result_file: ${{runner.workspace}}/build/output.txt
        compiler: MSVC
        exclude_dir: ${{github.workspace}}/lib
        debug_output: true
