name: Windows

on:
  push:
    branches:
      - master
      - develop
  pull_request:

env:
  SDK_VERSION: 1.3.204.1
  VULKAN_SDK: 'C:\VulkanSDK\$env:SDK_VERSION'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Cache Vulkan SDK
      id: cache-vulkan-sdk
      uses: actions/cache@v2
      with:
        path: $env:VULKAN_SDK
        key: vulkan-sdk-${{ runner.os }}-$env:SDK_VERSION

    - name: Download and install Vulkan SDK
      if: steps.cache-vulkan-sdk.outputs.cache-hit != 'true'
      run: |
        $vulkanInstaller = "VulkanSDK-$env:SDK_VERSION-Installer.exe"
        Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/$env:SDK_VERSION/windows/${vulkanInstaller}" -OutFile $vulkanInstaller
        Start-Process -FilePath $vulkanInstaller -ArgumentList '/S' -Wait -PassThru
        Remove-Item -Path $vulkanInstaller

    - name: Set up Vulkan environment variables
      run: |
        $vulkanDir = "$env:VULKAN_SDK"
        $vulkanBin = "$env:VULKAN_SDK/Bin"
        $vulkanLib = "$env:VULKAN_SDK/Lib"
        $vulkanInclude = "$env:VULKAN_SDK/Include"
        Add-Content $PROFILE "`n\$env:VULKAN_SDK = \"$vulkanDir\""
        Add-Content $PROFILE "`n\$env:Path += \";$vulkanBin\""
        Add-Content $PROFILE "`n\$env:VULKAN_INCLUDE = \"$vulkanInclude\""
        Add-Content $PROFILE "`n\$env:VULKAN_LIB = \"$vulkanLib\""

    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main

    - name: Create Build Environment
      run: |
        cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        conan install $GITHUB_WORKSPACE --output-folder=build --build=missing --settings=build_type=Release

        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE\
        -DASSIMP_BUILD_TESTS=0 -DASSIMP_BUILD_ASSIMP_TOOLS=0 -DBUILD_SHARED_LIBS=0

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: |
        cmake --build . --config $BUILD_TYPE > output.txt
        cat output.txt

    - name: Post PR comment for warnings/errors
      if: always() && github.ref != 'refs/heads/develop' && github.ref != 'refs/heads/master'
      uses: JacobDomagala/CompileResultAction@master
      with:
        comment_title: WINDOWS COMPILE RESULT
        compile_result_file: ${{runner.workspace}}/build/output.txt
        compiler: MSVC
        exclude_dir: ${{github.workspace}}/lib
        debug_output: true
